name: release-ios-base

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      name:
        description: 'Name of the project'
        required: true
        type: string
      root-path:
        description: 'Path of the react-native project'
        required: true
        type: string
      xcode-project-path:
        description: 'Path of the Xcode project'
        required: true
        type: string
      xcode-workspace-path:
        description: 'Path of the Xcode workspace'
        required: true
        type: string
      release-type:
        description: 'Release type of the project (debug/internal/production)'
        type: string
      project-type:
        description: 'Type of project (wallet/dapp)'
        required: true
        type: string
      scheme-name:
        description: 'Scheme name of the project'
        required: true
        type: string
      bundle-id:
        description: 'Bundle ID of the project'
        required: true
        type: string
      apple-id:
        description: 'App ID of the project'
        required: true
        type: string
    secrets:
      project-id:
        description: 'WalletConnect Cloud ID'
        required: true
      relay-url:
        description: 'WalletConnect Relay URL'
        required: false
      sentry-dsn:
        required: true
      sentry-file:
        required: true
      apple-username:
        required: true
      apple-key-id:
        required: true
      apple-key-content:
        required: true
      apple-issuer-id:
        required: true
      match-username:
        required: true
      match-keychain-password:
        required: true
      match-git-url:
        required: true
      match-ssh-key:
        required: true
      google-services-file:
        required: false
      aws-account-id:
        required: true
      slack-webhook-url:
        required: true
      testflight-url:
        description: 'TestFlight URL of the project'
        required: false

jobs:
  build:
    runs-on: macos-latest-xlarge
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.match-ssh-key }}

      - name: Setup
        uses: ./.github/actions/ci-setup
        with:
          root-path: ${{ inputs.root-path }}

      - name: Set podfile path
        id: podfile-hash
        run: |
          echo "Root path: ${{ inputs.root-path }}"
          echo "Podfile path: ${{ inputs.root-path }}/ios/Podfile.lock"
          echo "File exists: $(test -f "${{ inputs.root-path }}/ios/Podfile.lock" && echo "yes" || echo "no")"
          echo "podfile_path=${{ inputs.root-path }}/ios/Podfile.lock" >> "$GITHUB_ENV"

      - name: Cache pods
        id: pods-cache
        uses: actions/cache@v4
        with:
          path: ${{ inputs.root-path }}/ios/Pods
          key: ${{ runner.os }}-pods-${{ github.ref_name }}-${{ hashFiles(env.podfile_path) }}
          restore-keys: |
            ${{ runner.os }}-pods-${{ github.ref_name }}-

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: false

      - name: Install Gems
        run: bundle install

      # Create env file
      - run: touch ${{ inputs.root-path }}/.env.${{ inputs.release-type }} && echo -e "ENV_PROJECT_ID=${{ secrets.project-id }}\nENV_RELAY_URL=${{ secrets.relay-url }}\nENV_SENTRY_DSN=${{ secrets.sentry-dsn }}\nENV_SENTRY_TAG=${{ inputs.release-type }}" >> ${{ inputs.root-path }}/.env.${{ inputs.release-type }}

      # Create sentry file
      - run: touch ${{ inputs.root-path }}/ios/sentry.properties && echo "${{ secrets.sentry-file }}" >> ${{ inputs.root-path }}/ios/sentry.properties

      - name: Create Google Services file
        env:
          google-services-file: ${{ secrets.google-services-file }}
        if: ${{ env.google-services-file != '' }}
        run: echo ${{ env.google-services-file }} | base64 --decode >> ${{ inputs.root-path }}/ios/GoogleService-Info.plist

      - name: Build and Upload to App Store
        id: build
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'release_testflight'
        env:
          APPLE_ID: ${{ inputs.apple-id }}
          APPLE_USERNAME: ${{ secrets.apple-username }}
          APPLE_KEY_ID: ${{ secrets.apple-key-id }}
          APPLE_KEY_CONTENT: ${{ secrets.apple-key-content }}
          APPLE_ISSUER_ID: ${{ secrets.apple-issuer-id }}
          BUNDLE_ID: ${{ inputs.bundle-id }}
          MATCH_USERNAME: ${{ secrets.match-username }}
          MATCH_PASSWORD: ${{ secrets.match-keychain-password }}
          MATCH_GIT_URL: ${{ secrets.match-git-url }}
          PODFILE_PATH: ${{ inputs.root-path }}/ios/Podfile
          SCHEME: ${{ inputs.scheme-name }}
          XCODE_PROJECT_PATH: ${{ inputs.xcode-project-path }}
          XCWORKSPACE_PATH: ${{ inputs.xcode-workspace-path }}
          PROJECT_TYPE: ${{ inputs.project-type }}
          RELEASE_TYPE: ${{ inputs.release-type }}
          BRANCH_NAME: ${{ github.ref_name }}

      - name: Configure AWS credentials
        id: aws-config
        continue-on-error: true
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws-account-id }}:role/prod-github-actions-react-native-builds
          aws-region: eu-central-1

      - name: Upload iOS build to S3
        id: s3-upload
        continue-on-error: true
        run: |
          aws s3 cp \
            ./build/${{ inputs.project-type }}-${{ inputs.release-type }}.ipa \
            s3://walletconnect.react-native-builds.prod/ios/${{ inputs.release-type }}/${{ inputs.project-type }}-${{ inputs.release-type }}.ipa

      - name: Send Slack notification
        if: always() && !cancelled()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.slack-webhook-url }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "iOS Build Report - ${{ inputs.name }} (${{ inputs.project-type }}) - ${{ inputs.release-type }}",
              "blocks": [
                {
                  "type": "header",
                  "text": { "type": "plain_text", "text": "üçé iOS Build Report" }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*Project:*\n${{ inputs.name }} (${{ inputs.project-type }})" },
                    { "type": "mrkdwn", "text": "*Release Type:*\n${{ inputs.release-type }}" },
                    { "type": "mrkdwn", "text": "*Branch:*\n${{ github.ref_name }}" }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*Build & TestFlight:*\n${{ steps.build.outcome == 'success' && '‚úÖ Success' || '‚ùå Failed' }}" },
                    { "type": "mrkdwn", "text": "*S3 Upload:*\n${{ steps.s3-upload.outcome == 'success' && '‚úÖ Success' || steps.s3-upload.outcome == 'failure' && '‚ùå Failed' || '‚è≠Ô∏è Skipped' }}" },
                    { "type": "mrkdwn", "text": "*Overall Status:*\n${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}" }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "View Workflow Run" },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }${{ steps.build.outcome == 'success' && secrets.testflight-url != '' && format(',{{"type":"button","text":{{"type":"plain_text","text":"View in TestFlight"}},"url":"{0}"}}', secrets.testflight-url) || '' }}
                  ]
                }
              ]
            }